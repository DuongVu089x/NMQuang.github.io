<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace="com.nmquang.mapper.StudentMapper" >

	<resultMap id="studentResultMap" type="Student">
	  <id property="student_id" column="student_id" />
	  <result property="student_name" column="student_name"/>
	  <result property="student_code" column="student_code"/>
	  <result property="address" column="address"/>
	  <result property="average_score" column="average_score"/>
	  <result property="date_of_birth" column="date_of_birth"/>
	</resultMap>

	<select id="getAllStudent" resultMap="studentResultMap">
		SELECT student.student_id, student.student_name, student.student_code, student_info.address, student_info.average_score, student_info.date_of_birth
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student.student_id = student_info.student_id
	</select>

	<insert id="addStudent" keyColumn="student_id" keyProperty="student_id" parameterType="Student" useGeneratedKeys="true">
		INSERT INTO STUDENT(student_name, student_code)
		VALUES(#{student_name}, #{student_code})
	</insert>

	<insert id="addStudentInfo" useGeneratedKeys="true" keyProperty="student_id" keyColumn="student_id">
		INSERT INTO
		STUDENT_INFO(student_id, address,
		average_score, date_of_birth)
		VALUES(#{student_id}, #{address},
		#{average_score}, #{date_of_birth} )
	</insert>

	<update id="editStudent">
		UPDATE STUDENT as student , STUDENT_INFO as student_info
		SET student.student_name = #{student_name}, student.student_code = #{student_code}, student_info.address = #{address}, student_info.average_score = #{average_score}, student_info.date_of_birth = #{date_of_birth}
		WHERE student.student_id = #{student_id} AND student.student_id = student_info.student_id
	</update>

	<select id="getStudentId" resultMap="studentResultMap">
		SELECT student.student_id, student.student_name, student.student_code, student_info.address, student_info.average_score, student_info.date_of_birth
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student_info.student_id = #{student_id} AND student.student_id = #{student_id}
	</select>

	<delete id="deleteStudent">
		DELETE FROM STUDENT WHERE student_id = #{student_id}
	</delete>

	<delete id="deleteStudentInfo">
		DELETE FROM STUDENT_INFO WHERE student_id = #{student_id}
	</delete>

	<select id="searchStudentByName" resultMap="studentResultMap">
		SELECT *
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student.student_id = student_info.student_id AND student.student_name LIKE #{name}
	</select>

	<select id="countStudent" resultType="int">
		SELECT COUNT(*)
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student.student_id = student_info.student_id
	</select>

	<select id="getAllStudentByPage" resultMap="studentResultMap">
		SELECT student.student_id, student.student_name, student.student_code, student_info.address, student_info.average_score, student_info.date_of_birth
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student.student_id = student_info.student_id
		LIMIT #{page},#{record}
	</select>

	<select id="getAllStudentByPageForSearch" resultMap="studentResultMap">
		SELECT student.student_id, student.student_name, student.student_code, student_info.address, student_info.average_score, student_info.date_of_birth
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student.student_id = student_info.student_id AND student.student_name LIKE #{search}
		LIMIT #{page},#{record}
	</select>

	<select id="countStudentForSearch" resultType="int">
		SELECT COUNT(*)
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student.student_id = student_info.student_id AND student.student_name LIKE #{search}
	</select>

	<select id="getAllStudentByMonthForSearch" resultMap="studentResultMap">
		SELECT student.student_id, student.student_name, student.student_code, student_info.address, student_info.average_score, student_info.date_of_birth
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student.student_id = student_info.student_id AND ( MONTH(student_info.date_of_birth) = #{month} OR YEAR(student_info.date_of_birth) = #{year})
		LIMIT #{page},#{record}
	</select>

	<select id="countStudentByMonth" resultType="int">
		SELECT COUNT(*)
		FROM STUDENT as student, STUDENT_INFO as student_info
		WHERE student.student_id = student_info.student_id AND (MONTH(student_info.date_of_birth) = #{month} OR YEAR(student_info.date_of_birth) = #{year})
	</select>
</mapper>